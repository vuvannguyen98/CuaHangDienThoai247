@model DesignWeb_Project.Areas.Admin.Models.DataModel.Article

@{
    ViewBag.Title = "Chỉnh sửa bài viết";
}

<div class="curd" style="margin-right:70px;width:100%;">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "form-create-product" }))
    {

        <div class="breadcrumbs ace-save-state" id="breadcrumbs">
            <div class="breadcrumb">
                <div class="breadcrumb-left">
                    <i class="menu-icon fa fa-user" aria-hidden="true"></i>
                    <a href="~/Admin/Articles" class="title_bread"> Danh sách bài viết</a>
                    <span style="color:#ccc;margin:0px 15px;font-size:20px;"> /</span>
                    <span class="title_bread"> Chỉnh sửa</span>
                </div>
                <div class="breadcrumb-add">
                    @Html.ActionLink("Hủy", "Index", "", new { @class = "btn btn-default" })
                    <input type="submit" value="Lưu Lại" class="btn btn-primary" />
                </div>
            </div><!-- /.breadcrumb -->


        </div>


        <div class="createandedit">

            <div class="row">


                @Html.AntiForgeryToken()





                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ArticleID)
                @Html.HiddenFor(model => model.Images)
                @Html.HiddenFor(model => model.Author)

                <div class="col-xs-12 col-md-8">

                    <div class="editcreate">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ArticleName, htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.ArticleName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ArticleName, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Alias, htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })

                        </div>







                        <div class="form-group">
                            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label " })

                            @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" }, id = "txtContent" })
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DescriptShort, htmlAttributes: new { @class = "control-label" })

                            @Html.TextAreaFor(model => model.DescriptShort, new { htmlAttributes = new { @class = "form-control" }, rows = "4" })
                            @Html.ValidationMessageFor(model => model.DescriptShort, "", new { @class = "text-danger" })

                        </div>


                    </div>


                    <div class="seo_des">
                        <div class="pen-top">
                            <div class="pull-left txt_left1">Tối ưu SEO</div>

                            <div class="pull-right txt_left2">Chỉnh sửa SEO</div>

                            <p class="text_set">Thiết lập các thẻ mô tả giúp khách hàng dễ dàng tìm thấy danh mục này trên công cụ tìm kiếm như Google.</p>



                            <div class="input_telier">
                                <div class="form-group ten-seo">
                                    @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group ten-seo">
                                    @Html.LabelFor(model => model.MetaKeyword, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.MetaKeyword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaKeyword, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group ten-seo">
                                    @Html.LabelFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>


                    </div>


                <div class="col-xs-12 col-md-4">
                    <div class="visible-status">
                        <p class="title_st">Hiển thị</p>
                        <div class="check-st">
                            <div class="show-st">
                                @Html.RadioButtonFor(model => model.Status, "true") <span class="hideshow">Hiện</span>
                            </div>
                            <div class="show-st">
                                @Html.RadioButtonFor(model => model.Status, "false") <span class="hideshow">Ẩn</span>
                            </div>
                        </div>

                        <div class="time-stamp">
                            <p class="title_sts"> Thời Gian:</p>
                            @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="bot-des-more">
                        <h3 class="title_pl">Phân loại</h3>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BlogID, "Danh Mục Blog", htmlAttributes: new { @class = "control-label" })
                            <span class="custom-dropdown custom-dropdown-white">
                                @Html.DropDownList("BlogID", null, htmlAttributes: new { @class = "form-control custom-dropdown-select" })
                            </span>
                            @Html.ValidationMessageFor(model => model.BlogID, "", new { @class = "text-danger" })

                        </div>


                    </div>




                    <div class="image-avatar">
                        <p class="title_anh">Ảnh đại diện</p>

                        <div class="frame-image">


                            <input type="file" name="image_avatar" class="hidden" id="uploadFile" onchange="readURL(this);" />



                            <div id="showImage">
                                <img src="@Model.Images" id="image_showed" width="100%" />
                            </div>

                        </div>
                        <p style="color:red;font-weight:bold;text-align: center;padding-top: 10px;">@ViewBag.filename_error</p>

                        <a href="javascript::0" style="display:block;" class="change_image" onclick="performClick('uploadFile');">Thay hình ảnh</a>

                    </div>






                </div>




                    </div>

            <div class="text-left" style="margin-top:20px;">
                <i class="fa fa-angle-double-left" aria-hidden="true" style="color:red !important;"></i>  @Html.ActionLink("Trở lại trang trước", "Index", "", new { style = "color:red;font-size:12px;" })
            </div>


                </div>
                }

            </div>






<script type="text/javascript">
function performClick(elemId) {
   var elem = document.getElementById(elemId);
   if(elem && document.createEvent) {
      var evt = document.createEvent("MouseEvents");
      evt.initEvent("click", true, false);
      elem.dispatchEvent(evt);
   }
}
</script>




<script>
    var loadFile = function (event) {
        var files = event.target.files;
        for (var i = 0; i < files.length; i++) {
            $("#showImage").append("<img src='"+ URL.createObjectURL(event.target.files[i]) +"' class='imaged' />");
        }
    }
</script>



<script type="text/javascript">
            function readURL(input) {
                if (input.files && input.files[0]) {
                    $('.noset-image').hide();
                    $('.change_image').css("display","block");
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#image_showed')
                            .attr('src', e.target.result);
                    };

                    reader.readAsDataURL(input.files[0]);
                }
            }
</script>



<script>



    $("#ArticleName").focusout(function () {
        var Text = $(this).val();
        Text = Text.toLowerCase();
        $("#Alias").val(convertToSlug(Text));
    });


    $("#ArticleName").mouseout(function () {
            var Text = $(this).val();
            Text = Text.toLowerCase();
            $("#Alias").val(convertToSlug(Text));
        });
</script>